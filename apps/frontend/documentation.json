{
    "pipes": [],
    "interfaces": [
        {
            "name": "CartItem",
            "id": "interface-CartItem-59382567774abf09b0a04be97af65415be14dacc044a683c4dd5b9be36cf2fd0e86d74d05b17c02218841e1f888ad93498de475a3458dd73bdf79946fb3004c0",
            "file": "src/app/core/models/cart-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Product } from './product.model';\n\nexport interface CartItem {\n  product: Product;\n  quantity: number;\n}",
            "properties": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "Product",
            "id": "interface-Product-03731674bb5ff617684cdd6adb46de32994d425931e4af74956453072f120246667d2a27c0593964890813a6fb84a8f1e11c7cc7566b5364455bc5b3f3fd5386",
            "file": "src/app/core/models/product.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  stock: number;\n  imageUrl?: string; // La hacemos opcional por si no siempre viene\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "stock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-8d5212dc356cd5d6f9844dfe3991f970bcb1cb6056d646d926b687da53e34a6d8c40a7aaf45bad58d29918af1603c0b0549f8f71a320399e5fb4c253138811d2-1",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  id: string;\n  name: string;\n  email: string;\n  // Añade aquí cualquier otra propiedad que tu backend devuelva sobre el usuario\n  // por ejemplo: role: 'admin' | 'customer';\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-ba2453a0235dd02fd05286a2ffca2ef649f5aadf082af4655d4ea8c6d20a9d4b6e499c434a83f93de3ca9e12459d220d7efa0989c8a1040a9bf0f320a0ee8a85",
            "file": "src/app/core/auth/auth.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'http://localhost:3000/api/users'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<User | null>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userSubject",
                    "defaultValue": "new BehaviorSubject<User | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "checkTokenOnLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nVerifica si hay un token en localStorage al cargar la aplicación.\nSi el token existe y no ha expirado, actualiza el estado del usuario.\n",
                    "description": "<p>Verifica si hay un token en localStorage al cargar la aplicación.\nSi el token existe y no ha expirado, actualiza el estado del usuario.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nObtiene el token de localStorage.\nUsado principalmente por el AuthInterceptor.\n",
                    "description": "<p>Obtiene el token de localStorage.\nUsado principalmente por el AuthInterceptor.</p>\n",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEnvía las credenciales al backend para iniciar sesión.\n",
                    "description": "<p>Envía las credenciales al backend para iniciar sesión.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 878,
                                "end": 889,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "credentials"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 872,
                                "end": 877,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>Objeto con email y password.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 925,
                                "end": 932,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Un observable con la respuesta del backend (que debería incluir el token y datos del usuario).</p>\n"
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCierra la sesión del usuario.\n",
                    "description": "<p>Cierra la sesión del usuario.</p>\n"
                },
                {
                    "name": "saveToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGuarda el token en localStorage.\n",
                    "description": "<p>Guarda el token en localStorage.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1983,
                                "end": 1988,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "token"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1977,
                                "end": 1982,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>El token JWT recibido del backend.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { jwtDecode } from 'jwt-decode';\nimport { User } from '../models/user.model';\n\nconst TOKEN_KEY = 'auth-token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // La URL base de la API. Las rutas de usuario están en /api/users\n  // según la configuración del backend.\n  private apiUrl = 'http://localhost:3000/api/users';\n\n  private userSubject = new BehaviorSubject<User | null>(null);\n  public user$: Observable<User | null> = this.userSubject.asObservable();\n\n  constructor(private http: HttpClient) {\n    // Al iniciar el servicio, verificamos si hay un token válido en localStorage.\n    this.checkTokenOnLoad();\n  }\n\n  /**\n   * Envía las credenciales al backend para iniciar sesión.\n   * @param credentials Objeto con email y password.\n   * @returns Un observable con la respuesta del backend (que debería incluir el token y datos del usuario).\n   */\n  login(credentials: { email: string, password: string }): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/login`, credentials).pipe(\n      tap(response => {\n        // El 'tap' nos permite ejecutar una acción sin modificar la respuesta.\n        // Asumimos que el backend devuelve un objeto con una propiedad 'token' y 'user'.\n        if (response && response.token && response.user) {\n          this.saveToken(response.token);\n          this.userSubject.next(response.user);\n        }\n      })\n    );\n  }\n\n  /**\n   * Cierra la sesión del usuario.\n   */\n  logout(): void {\n    // Elimina el token del almacenamiento\n    localStorage.removeItem(TOKEN_KEY);\n    // Informa a toda la aplicación que ya no hay un usuario logueado\n    this.userSubject.next(null);\n    // Opcional: podrías querer redirigir al usuario a la página de inicio\n    // this.router.navigate(['/']);\n  }\n\n  /**\n   * Guarda el token en localStorage.\n   * @param token El token JWT recibido del backend.\n   */\n  private saveToken(token: string): void {\n    localStorage.setItem(TOKEN_KEY, token);\n  }\n\n  /**\n   * Obtiene el token de localStorage.\n   * Usado principalmente por el AuthInterceptor.\n   */\n  public getToken(): string | null {\n    return localStorage.getItem(TOKEN_KEY);\n  }\n\n  /**\n   * Verifica si hay un token en localStorage al cargar la aplicación.\n   * Si el token existe y no ha expirado, actualiza el estado del usuario.\n   */\n  private checkTokenOnLoad(): void {\n    const token = this.getToken();\n    if (token) {\n      try {\n        const decodedToken: any = jwtDecode(token);\n        const isExpired = decodedToken.exp * 1000 < Date.now();\n\n        if (isExpired) {\n          this.logout(); // Si el token ha expirado, limpiamos todo.\n        } else {\n          // Si el token es válido, reconstruimos el objeto de usuario y lo emitimos.\n          // El token solo contiene id, email y role. El 'name' no está presente.\n          // Para ser consistentes, creamos un objeto User parcial, igual que haría el login.\n          // El backend es la fuente de verdad para el nombre completo.\n          // Por ahora, podemos usar el email o una cadena vacía para el nombre.\n          const user: User = { id: decodedToken.id, email: decodedToken.email, name: decodedToken.name || '' };\n          this.userSubject.next(user);\n        }\n      } catch (error) {\n        this.logout(); // Si el token es inválido o malformado, limpiamos todo.\n      }\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "CartService",
            "id": "injectable-CartService-245fb2e46a4fd26571bb54fd963ba4e2a0ffcd62066df6d9f71b8e8a1d9278407f2e83ac9ef527a00d151157c6cbd5d1419a12c4cb3eaeb893d19d6de1174508",
            "file": "src/app/core/state/cart.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'http://localhost:3000/api/users/cart'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "items$",
                    "defaultValue": "this.itemsSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CartItem[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "itemsSubject",
                    "defaultValue": "new BehaviorSubject<CartItem[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.loadingSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loadingSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "totalItems$",
                    "defaultValue": "this.items$.pipe(\n    map(items => items.reduce((total, item) => total + item.quantity, 0))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "totalPrice$",
                    "defaultValue": "this.items$.pipe(\n    map(items => items.reduce((total, item) => total + (item.product.price * item.quantity), 0))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAñade un producto al carrito.\nSi el producto ya existe, incrementa su cantidad.\nSi no, lo añade como un nuevo ítem.\n",
                    "description": "<p>Añade un producto al carrito.\nSi el producto ya existe, incrementa su cantidad.\nSi no, lo añade como un nuevo ítem.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadInitialCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCarga el estado inicial del carrito desde el backend.\n",
                    "description": "<p>Carga el estado inicial del carrito desde el backend.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeProduct",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nElimina un producto del carrito por su ID.\n",
                    "description": "<p>Elimina un producto del carrito por su ID.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateQuantity",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "quantity",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActualiza la cantidad de un producto en el carrito.\nSi la cantidad es 0 o menos, elimina el producto.\n",
                    "description": "<p>Actualiza la cantidad de un producto en el carrito.\nSi la cantidad es 0 o menos, elimina el producto.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 3879,
                                "end": 3888,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "productId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3873,
                                "end": 3878,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>El ID del producto a actualizar.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 3934,
                                "end": 3942,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "quantity"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3928,
                                "end": 3933,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>La nueva cantidad.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, map, tap, finalize } from 'rxjs';\nimport { CartItem } from '../models/cart-item.model';\nimport { Product } from '../models/product.model';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  // La URL base de la API. Las rutas del carrito están anidadas bajo /api/users\n  private apiUrl = 'http://localhost:3000/api/users/cart';\n\n  private itemsSubject = new BehaviorSubject<CartItem[]>([]);\n  // Exponemos el estado del carrito como un Observable de solo lectura.\n  public items$: Observable<CartItem[]> = this.itemsSubject.asObservable();\n\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  public loading$: Observable<boolean> = this.loadingSubject.asObservable();\n\n  // Observable para la cantidad total de ítems en el carrito (para el ícono del header).\n  public totalItems$: Observable<number> = this.items$.pipe(\n    map(items => items.reduce((total, item) => total + item.quantity, 0))\n  );\n\n  // Observable para el precio total del carrito.\n  public totalPrice$: Observable<number> = this.items$.pipe(\n    map(items => items.reduce((total, item) => total + (item.product.price * item.quantity), 0))\n  );\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n    // Nos suscribimos a los cambios en el estado de autenticación.\n    this.authService.user$.subscribe(user => {\n      if (user) {\n        // Si hay un usuario, cargamos su carrito.\n        this.loadInitialCart();\n      } else {\n        // Si no hay usuario (o cierra sesión), vaciamos el carrito localmente.\n        this.itemsSubject.next([]);\n      }\n    });\n  }\n\n  /**\n   * Carga el estado inicial del carrito desde el backend.\n   */\n  private loadInitialCart(): void {\n    this.loadingSubject.next(true);\n    this.http.get<CartItem[]>(`${this.apiUrl}`).pipe(\n      finalize(() => this.loadingSubject.next(false))\n    ).subscribe({\n      next: items => this.itemsSubject.next(items),\n      error: err => {\n        console.error('Error al cargar el carrito inicial:', err);\n        // Si falla (p.ej. usuario no logueado), nos aseguramos que el carrito esté vacío.\n        this.itemsSubject.next([]);\n      }\n    });\n  }\n\n  /**\n   * Añade un producto al carrito.\n   * Si el producto ya existe, incrementa su cantidad.\n   * Si no, lo añade como un nuevo ítem.\n   */\n  addProduct(product: Product): void {\n    // Ahora, en lugar de la lógica local, hacemos una petición al backend.\n    // Asumo un endpoint POST en /api/cart/add que recibe el productId.\n    const payload = { productId: product.id, quantity: 1 };\n    this.loadingSubject.next(true);\n    // La respuesta es un mensaje, no el carrito. Por eso usamos <any>.\n    this.http.post<any>(`${this.apiUrl}/items`, payload).pipe(\n      finalize(() => this.loadingSubject.next(false))\n    ).subscribe({\n      next: () => this.loadInitialCart(), // En éxito, recargamos el carrito.\n      error: err => {\n        console.error('Error al añadir producto al carrito:', err);\n        // Aquí podrías mostrar una notificación al usuario\n      }\n    });\n  }\n\n  /**\n   * Elimina un producto del carrito por su ID.\n   */\n  removeProduct(productId: string): void {\n    // Asumo un endpoint DELETE en /api/cart/items/{productId}\n    this.loadingSubject.next(true);\n    this.http.delete<any>(`${this.apiUrl}/items/${productId}`).pipe(\n      finalize(() => this.loadingSubject.next(false))\n    ).subscribe({\n      next: () => this.loadInitialCart(), // En éxito, recargamos el carrito.\n      error: err => {\n        console.error('Error al eliminar producto del carrito:', err);\n      }\n    });\n  }\n\n  /**\n   * Actualiza la cantidad de un producto en el carrito.\n   * Si la cantidad es 0 o menos, elimina el producto.\n   * @param productId El ID del producto a actualizar.\n   * @param quantity La nueva cantidad.\n   */\n  updateQuantity(productId: string, quantity: number): void {\n    // La lógica de si la cantidad es <= 0 ahora la debe manejar el backend.\n    // Asumo un endpoint PUT o PATCH en /api/cart/items/{productId}\n    const payload = { quantity };\n    this.loadingSubject.next(true);\n    this.http.patch<any>(`${this.apiUrl}/items/${productId}`, payload).pipe(\n      finalize(() => this.loadingSubject.next(false))\n    ).subscribe({\n      next: () => this.loadInitialCart(), // En éxito, recargamos el carrito.\n      error: err => {\n        console.error('Error al actualizar la cantidad del producto:', err);\n      }\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ListProducts",
            "id": "injectable-ListProducts-6b7300c96da72a11ea858a7c4c47c06bede445e575d2c03354659e0b54e57248136393e5ca01e3a94e8917a8163923fc34a4db59e1ef19221ed92fbc5c170b7b",
            "file": "src/app/application/list-products.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListProducts {\r\n  \r\n}\r\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ListProductsUseCase",
            "id": "injectable-ListProductsUseCase-b73c840f882559149d5825e14113133131d6e94e7319477a3b7a0cde54c1e42bb46888b9b201691eb882fc4addc368d9a6522bb3ffbe2992a2df9c897a7714c0",
            "file": "src/app/application/list-products.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "execute",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../core/models/product.model';\nimport { ProductRepository } from '../infrastructure/product-repository.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListProductsUseCase {\n  // Inyectamos el repositorio (la capa de infraestructura)\n  constructor(private productRepository: ProductRepository) { }\n\n  // El caso de uso simplemente expone un método \"execute\" que orquesta la lógica.\n  execute(): Observable<Product[]> {\n    return this.productRepository.getAllProducts();\n  }\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productRepository",
                        "type": "ProductRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "productRepository",
                        "type": "ProductRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ProductRepository",
            "id": "injectable-ProductRepository-39f3ffa12a03b71743014fc57f82602914d2532927aeb7782df143cbb8c44e17e3e1af3893f2e00059588b522a01df78c742c59b2239fcf6fac721879dee43c1",
            "file": "src/app/infrastructure/product-repository.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'http://localhost:3000/api/products'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAllProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, map } from 'rxjs';\r\nimport { Product } from '../core/models/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductRepository {\r\n  // La URL de tu API de backend\r\n  private apiUrl = 'http://localhost:3000/api/products';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllProducts(): Observable<Product[]> {\r\n    // Hacemos la llamada GET y esperamos un array de tipo Product\r\n    return this.http.get<Product[]>(this.apiUrl);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-ec9e487eaa5142811da38de632a1d8bf8c6a377816a059acd6a0d24e3415b9cc7d039bfe0a31fc1fbd5b5cb1dfabb26763f6a22a58898d3a7f40281ff70fc407",
            "file": "src/app/pages/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './about.component.html',\r\n  styleUrl: './about.component.scss'\r\n})\r\nexport class AboutComponent {\r\n\r\n}\r\n",
            "styleUrl": "./about.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"about-page\">\r\n  <div class=\"about-container\">\r\n    <header class=\"about-header\">\r\n      <h1>Sobre GamerStore</h1>\r\n      <p>Tu destino número uno para hardware y periféricos de gaming.</p>\r\n    </header>\r\n\r\n    <section class=\"about-content\">\r\n      <h2>Nuestra Misión</h2>\r\n      <p>\r\n        En GamerStore, nuestra misión es simple: equipar a cada gamer con las herramientas que necesita para alcanzar la victoria. Creemos que el equipo adecuado puede marcar la diferencia entre una partida buena y una legendaria. Por eso, seleccionamos cuidadosamente cada producto de nuestro catálogo, asegurándonos de ofrecer solo lo mejor en rendimiento, durabilidad y estilo.\r\n      </p>\r\n\r\n      <h2>Nuestra Historia</h2>\r\n      <p>\r\n        GamerStore nació de la pasión de un grupo de amigos gamers que estaban cansados de buscar en múltiples sitios para encontrar el equipo perfecto. Decidimos crear una tienda única donde la comunidad pudiera encontrar todo lo que necesita, desde teclados mecánicos y mouses de alta precisión hasta los monitores más rápidos y las sillas más cómodas.\r\n      </p>\r\n      <p>\r\n        Desde nuestros humildes comienzos en un pequeño garaje, hemos crecido hasta convertirnos en un referente en la comunidad gamer, siempre manteniendo nuestro compromiso con la calidad y el servicio al cliente.\r\n      </p>\r\n    </section>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "App",
            "id": "component-App-f56cd699b2e4b4b9d36aede6fc79574901305f0b50fb02698991669a78c01b3adbe001e2adf819230d6829e435e85ce2c7f8be6c8c9e3cc5516c96db3ace7212",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "signal('frontend')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { FooterComponent } from './layout/footer/footer.component';\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, HeaderComponent, FooterComponent],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  protected readonly title = signal('frontend');\n}\n",
            "styleUrl": "./app.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-header></app-header>\n\n<main>\n  <router-outlet />\n</main>\n\n<app-footer></app-footer>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 328,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "CartComponent",
            "id": "component-CartComponent-0ee7906bb093a36db19f96259db6657c07f84841c8dd974af0b6ad70a25e96ebdeb0955437d3f6139ba013788003d00795c78148793d8f6c89376ce9393b94a9",
            "file": "src/app/pages/cart/cart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cart",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cart.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cartItems$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CartItem[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "totalPrice$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "onQuantityChange",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newQuantity",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newQuantity",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRemoveProduct",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "CurrencyPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CartService } from '../../core/state/cart.service';\nimport { Observable } from 'rxjs';\nimport { CartItem } from '../../core/models/cart-item.model';\nimport { AsyncPipe, CurrencyPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-cart',\n  standalone: true,\n  imports: [AsyncPipe, CurrencyPipe],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\nexport class CartComponent {\n  cartItems$: Observable<CartItem[]>;\n  totalPrice$: Observable<number>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private cartService: CartService) {\n    this.cartItems$ = this.cartService.items$;\n    this.totalPrice$ = this.cartService.totalPrice$;\n    this.isLoading$ = this.cartService.loading$;\n  }\n\n  onRemoveProduct(productId: string): void {\n    this.cartService.removeProduct(productId);\n  }\n\n  onQuantityChange(productId: string, newQuantity: string): void {\n    const quantity = parseInt(newQuantity, 10);\n    // Nos aseguramos de que el valor sea un número válido antes de enviarlo\n    if (!isNaN(quantity)) {\n      this.cartService.updateQuantity(productId, quantity);\n    }\n  }\n}\n",
            "styleUrl": "./cart.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"cart-page\">\n  <div class=\"cart-container\">\n    <header class=\"cart-header\">\n      <h1>Carrito de Compras</h1>\n    </header>\n\n    <!-- Usamos el pipe async para obtener los items y los guardamos en la variable 'items' -->\n    @if (cartItems$ | async; as items) {\n\n      <!-- Mostramos el layout principal solo si hay items en el carrito -->\n      @if (items.length > 0) {\n        <!-- Añadimos una clase 'loading' cuando isLoading$ es true para poder aplicar estilos (ej. opacidad) -->\n        <div class=\"cart-layout\" [class.loading]=\"isLoading$ | async\">\n          <!-- Columna de la izquierda: Lista de productos -->\n          <div class=\"cart-items\">\n            <h2>Tus Productos</h2>\n\n            <!-- Iteramos sobre los productos reales del carrito -->\n            @for (item of items; track item.product.id) {\n              <div class=\"cart-item\">\n                <img [src]=\"item.product.imageUrl\" [alt]=\"item.product.name\" class=\"item-img\">\n                <div class=\"item-details\">\n                  <p class=\"item-name\">{{ item.product.name }}</p>\n                  <!-- Usamos el pipe currency para formatear el precio -->\n                  <p class=\"item-price\">{{ item.product.price | currency:'ARS' }}</p>\n                </div>\n                <div class=\"item-quantity\">\n                  <!-- Usamos una variable de referencia #quantityInput para acceder al valor de forma segura -->\n                  <input #quantityInput type=\"number\" [value]=\"item.quantity\" min=\"1\" (change)=\"onQuantityChange(item.product.id, quantityInput.value)\" [disabled]=\"isLoading$ | async\">\n                </div>\n                <button class=\"item-remove-btn\" (click)=\"onRemoveProduct(item.product.id)\" [disabled]=\"isLoading$ | async\">Eliminar</button>\n              </div>\n            }\n          </div>\n\n          <!-- Columna de la derecha: Resumen del pedido -->\n          <div class=\"order-summary\">\n            <h2>Resumen del Pedido</h2>\n            <!-- Mostramos el total dinámico con el pipe currency -->\n            <div class=\"summary-row total\"><p>Total:</p> <p>{{ (totalPrice$ | async) | currency:'ARS' }}</p></div>\n            <button class=\"checkout-btn\" [disabled]=\"isLoading$ | async\">Proceder al Pago</button>\n          </div>\n        </div>\n      } @else {\n        <!-- Mensaje que se muestra si el carrito está vacío -->\n        <div class=\"cart-empty\">\n          <h2>Tu carrito está vacío</h2>\n          <p>¡Añade productos para verlos aquí!</p>\n          <a routerLink=\"/products\" class=\"back-to-shop-btn\">Ver Productos</a>\n        </div>\n      }\n    }\n  </div>\n</div>\n"
        },
        {
            "name": "Checkout",
            "id": "component-Checkout-1392663003ffd891118bc160a706723017c805573e10a5b127a944ca9cfca48d240159116e995ed96a2e9205bd5787135c17e641323262a56f4ab0256c566cf2",
            "file": "src/app/pages/checkout/checkout.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  imports: [],\r\n  templateUrl: './checkout.component.html',\r\n  styleUrl: './checkout.scss'\r\n})\r\nexport class Checkout {\r\n\r\n}\r\n",
            "styleUrl": "./checkout.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>checkout works!</p>\r\n"
        },
        {
            "name": "ContactComponent",
            "id": "component-ContactComponent-93f6dc7dbf15fecae4785eb85d0ac72ebeeb5149ea0de1c00aeb19bf3d0e4b02e3fd97170bc1baa5da87400a6c0c6a45bf4d010fc7755d2e6594760ff9ab30bb",
            "file": "src/app/pages/contact/contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contact",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./contact.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  standalone: true,\n  imports: [],\n  templateUrl: './contact.component.html',\n  styleUrl: './contact.component.scss'\n})\nexport class ContactComponent {\n\n}\n",
            "styleUrl": "./contact.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"contact-page\">\r\n  <div class=\"contact-container\">\r\n    <header class=\"contact-header\">\r\n      <h1>Contáctanos</h1>\r\n      <p>¿Tienes alguna pregunta o comentario? Nos encantaría saber de ti.</p>\r\n    </header>\r\n\r\n    <div class=\"contact-content\">\r\n      <div class=\"contact-form-container\">\r\n        <h2>Envíanos un mensaje</h2>\r\n        <form class=\"contact-form\" (submit)=\"$event.preventDefault()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Nombre</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Correo Electrónico</label>\r\n            <input type=\"email\" id=\"email\" name=\"email\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"message\">Mensaje</label>\r\n            <textarea id=\"message\" name=\"message\" rows=\"6\" required></textarea>\r\n          </div>\r\n          <button type=\"submit\" class=\"submit-btn\">Enviar Mensaje</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"contact-info\">\r\n        <h2>Información de Contacto</h2>\r\n        <p><strong>Correo Electrónico:</strong><br>soporte@gamerstore.com</p>\r\n        <p><strong>Teléfono:</strong><br>+54 9 11 1234-5678</p>\r\n        <p><strong>Horario de Atención:</strong><br>Lunes a Viernes, 9:00 - 18:00</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-03dc3eb32ff7b29dd94b2a298885b42d650264095bba959e5d725277282a647b374488fe109d7b2affb0dd98188248920eb4df33b62c61b03f4e6c079d08896e",
            "file": "src/app/layout/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [RouterModule],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n",
            "styleUrl": "./footer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<footer class=\"footer\">\r\n  <div class=\"footer-container\">\r\n    <div class=\"footer-copyright\">\r\n      <p>&copy; 2024 GamerStore. Todos los derechos reservados.</p>\r\n    </div>\r\n    <div class=\"footer-links\">\r\n      <a routerLink=\"/privacy-policy\">Política de Privacidad</a>\r\n      <a routerLink=\"/terms-of-service\">Términos de Servicio</a>\r\n    </div>\r\n  </div>\r\n</footer>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-8e0fd4d2d40f8a7c163eeb8f21f3065b5f352e4a6e300b50c2f304f57986ebb88ed11bab0a4d159e01ea8b2f91580290d76719d90208534d0fe4b9280cbe0c10-1",
            "file": "src/app/layout/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "totalItemsInCart$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {RouterLink, RouterModule} from '@angular/router';\nimport { CartService } from '../../core/state/cart.service';\nimport { Observable } from 'rxjs';\nimport { AsyncPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [RouterLink, AsyncPipe],  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  totalItemsInCart$: Observable<number>;\n\n  constructor(private cartService: CartService) {\n    this.totalItemsInCart$ = this.cartService.totalItems$;\n  }\n}\n",
            "styleUrl": "./header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header class=\"header\">\n  <div class=\"header-container\">\n    <div class=\"header-logo\">\n      <a routerLink=\"/\">\n        <!-- Un logo simple en SVG para no depender de un archivo de imagen -->\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M9 3L4.5 6L9 9M15 3L19.5 6L15 9\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M4.5 18L9 21L13.5 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M19.5 18L15 21L10.5 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M4.5 6V18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M19.5 6V18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          <path d=\"M9 9L13.5 12L9 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n        <span>GamerStore</span>\n      </a>\n    </div>\n    <nav class=\"header-nav\">\n      <a routerLink=\"/products\" routerLinkActive=\"active\">Productos</a>\n      <a routerLink=\"/about\" routerLinkActive=\"active\">Nosotros</a>\n      <a routerLink=\"/contact\" routerLinkActive=\"active\">Contacto</a>\n    </nav>\n    <div class=\"header-actions\">\n      <a routerLink=\"/cart\" class=\"cart-button\">\n        <span class=\"cart-icon\">🛒</span>\n        <!-- Usamos el pipe async para obtener el valor del observable -->\n        @if (totalItemsInCart$ | async; as total) {\n          @if (total > 0) { <span class=\"cart-count\">{{ total }}</span> }\n        }\n      </a>\n    </div>\n  </div>\n</header>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-1d7476129dff8cb1552d81771ce9440175e1fabb40d21d0e744ac2cf3a8298610621bfa56d26c5b0baad2ec471a423859b77e77c8bd0003117b6fca9cfae1d63",
            "file": "src/app/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/auth/auth.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule, // Necesario para directivas como ngIf\r\n    ReactiveFormsModule // El módulo para formularios reactivos\r\n  ],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  errorMessage: string | null = null;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = null;\r\n    this.authService.login(this.loginForm.value).subscribe({\r\n      next: () => this.router.navigate(['/products']),\r\n      error: () => this.errorMessage = 'Credenciales inválidas. Por favor, inténtalo de nuevo.',\r\n      complete: () => this.isLoading = false\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"login-container\">\r\n  <form class=\"login-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h2>Iniciar Sesión</h2>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input id=\"email\" type=\"email\" formControlName=\"email\" placeholder=\"tu@email.com\">\r\n      <!-- Mensajes de error para el campo email -->\r\n      @if (loginForm.get('email')?.invalid && (loginForm.get('email')?.dirty || loginForm.get('email')?.touched)) {\r\n        <div class=\"error-message\">\r\n          @if (loginForm.get('email')?.hasError) {\r\n            <p>El email es requerido.</p>\r\n          }\r\n          @if (loginForm.get('email')?.hasError) {\r\n            <p>Por favor, introduce un email válido.</p>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Contraseña</label>\r\n      <input id=\"password\" type=\"password\" formControlName=\"password\" placeholder=\"••••••••\">\r\n    </div>\r\n\r\n    @if (errorMessage) {\r\n      <div class=\"error-message server-error\">{{ errorMessage }}</div>\r\n    }\r\n\r\n    <button type=\"submit\" [disabled]=\"loginForm.invalid || isLoading\">\r\n      {{ isLoading ? 'Cargando...' : 'Iniciar Sesión' }}\r\n    </button>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ProductCardComponent",
            "id": "component-ProductCardComponent-55bea9023f38eaf3e008a351802522db61fd0d0ddc65b653abb2d7ccb14abb853070e380cc134bbd2cd1b33439ac50587015c4f5b20139ae6025c62715f13c06",
            "file": "src/app/components/product-card/product-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-card",
            "styleUrls": [
                "./product-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Product",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onAddToCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CurrencyPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Product } from '../../core/models/product.model';\nimport { CurrencyPipe } from '@angular/common';\nimport { CartService } from '../../core/state/cart.service';\n\n@Component({\n  selector: 'app-product-card',\n  standalone: true,\n  imports: [CurrencyPipe],\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.scss']\n})\nexport class ProductCardComponent {\n  @Input() product!: Product;\n  constructor(private cartService: CartService) {}\n\n  onAddToCart(): void {\n    this.cartService.addProduct(this.product);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n  width: 300px;\r\n  font-family: sans-serif;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n\r\n  &.out-of-stock {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n.card-img {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.card-body {\r\n  padding: 16px;\r\n}\r\n\r\n.card-title {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin: 0 0 8px;\r\n  // Trunca el texto si es muy largo\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.card-price {\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin: 0 0 16px;\r\n}\r\n\r\n.card-button {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover:not(:disabled) {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #c0c0c0;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n",
                    "styleUrl": "./product-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"card\" [class.out-of-stock]=\"product.stock === 0\">\n  <img [src]=\"product.imageUrl\" [alt]=\"product.name\" class=\"card-img\">\n  <div class=\"card-body\">\n    <h3 class=\"card-title\">{{ product.name }}</h3>\n    <p class=\"card-price\">{{ product.price | currency:'ARS' }}</p>\n    <button class=\"card-button\" [disabled]=\"product.stock === 0\" (click)=\"onAddToCart()\">\n      {{ product.stock > 0 ? 'Agregar al Carrito' : 'Sin Stock' }}\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "ProductListComponent",
            "id": "component-ProductListComponent-dd1b2dc6f0050efc31951a9e496d674fceabead6a83428124785999de774d20bb45b4c91188e93fa074f63e9ddaf14ac0685e6d28eacca43406fd4c66600a2e4",
            "file": "src/app/pages/product-list/product-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-list",
            "styleUrls": [
                "./product-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "products$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Product[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ProductCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../../core/models/product.model';\nimport { ListProductsUseCase } from '../../application/list-products.service';\nimport { ProductCardComponent } from '../../components/product-card/product-card.component';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-product-list',\n  standalone: true,\n  imports: [CommonModule, ProductCardComponent],\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss'],})\nexport class ProductListComponent implements OnInit {\n  // Guardamos el observable que nos devuelve el caso de uso\n  products$!: Observable<Product[]>;\n\n  // Inyectamos nuestro caso de uso\n  constructor(private listProducts: ListProductsUseCase) {}\n\n  ngOnInit(): void {\n    this.products$ = this.listProducts.execute();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 24px;\r\n  padding: 24px;\r\n}\r\n",
                    "styleUrl": "./product-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "listProducts",
                        "type": "ListProductsUseCase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "listProducts",
                        "type": "ListProductsUseCase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"product-list-container\">\n  <div class=\"product-grid\">\n      @for (product of products$ | async; track product.id) {\n        <app-product-card [product]=\"product\"></app-product-card>\n      }\n      </div>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    // Añadimos el proveedor para que HttpClient esté disponible en toda la app\n    // y le decimos que use nuestro interceptor para todas las peticiones.\n    provideHttpClient(withInterceptors([authInterceptor])),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
            },
            {
                "name": "authInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/interceptors/auth.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\n  // 1. Inyectamos el AuthService para acceder a la lógica del token.\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n\n  // 2. Si no hay token, dejamos pasar la petición original sin modificarla.\n  // Esto es crucial para peticiones públicas como el login o el registro.\n  if (!token) {\n    return next(req);\n  }\n\n  // 3. Si hay un token, clonamos la petición y le añadimos la cabecera de autorización.\n  // Las peticiones en Angular son inmutables, por eso debemos clonarlas.\n  const authReq = req.clone({\n    setHeaders: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n\n  // 4. Dejamos pasar la nueva petición con la cabecera ya incluida.\n  return next(authReq);\n}",
                "rawdescription": "Interceptor funcional que se encarga de añadir el token de autenticación\na las cabeceras de las peticiones HTTP salientes.",
                "description": "<p>Interceptor funcional que se encarga de añadir el token de autenticación\na las cabeceras de las peticiones HTTP salientes.</p>\n"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Routes",
                "defaultValue": "[\n  { path: 'products', component: ProductListComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  {\n    path: 'cart',\n    loadComponent: () => \"import('./pages/cart/cart.component').then(m => m.CartComponent)\"\n  },\n  {\n    path: 'login',\n    loadComponent: () => \"import('./pages/login/login.component').then(m => m.LoginComponent)\"\n  },\n  { path: '', redirectTo: '/products', pathMatch: 'full' }\n]"
            },
            {
                "name": "TOKEN_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/auth/auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'auth-token'"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    // Añadimos el proveedor para que HttpClient esté disponible en toda la app\n    // y le decimos que use nuestro interceptor para todas las peticiones.\n    provideHttpClient(withInterceptors([authInterceptor])),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
                }
            ],
            "src/app/core/interceptors/auth.interceptor.ts": [
                {
                    "name": "authInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/interceptors/auth.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\n  // 1. Inyectamos el AuthService para acceder a la lógica del token.\n  const authService = inject(AuthService);\n  const token = authService.getToken();\n\n  // 2. Si no hay token, dejamos pasar la petición original sin modificarla.\n  // Esto es crucial para peticiones públicas como el login o el registro.\n  if (!token) {\n    return next(req);\n  }\n\n  // 3. Si hay un token, clonamos la petición y le añadimos la cabecera de autorización.\n  // Las peticiones en Angular son inmutables, por eso debemos clonarlas.\n  const authReq = req.clone({\n    setHeaders: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n\n  // 4. Dejamos pasar la nueva petición con la cabecera ya incluida.\n  return next(authReq);\n}",
                    "rawdescription": "Interceptor funcional que se encarga de añadir el token de autenticación\na las cabeceras de las peticiones HTTP salientes.",
                    "description": "<p>Interceptor funcional que se encarga de añadir el token de autenticación\na las cabeceras de las peticiones HTTP salientes.</p>\n"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Routes",
                    "defaultValue": "[\n  { path: 'products', component: ProductListComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  {\n    path: 'cart',\n    loadComponent: () => \"import('./pages/cart/cart.component').then(m => m.CartComponent)\"\n  },\n  {\n    path: 'login',\n    loadComponent: () => \"import('./pages/login/login.component').then(m => m.LoginComponent)\"\n  },\n  { path: '', redirectTo: '/products', pathMatch: 'full' }\n]"
                }
            ],
            "src/app/core/auth/auth.service.ts": [
                {
                    "name": "TOKEN_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/auth/auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'auth-token'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "children": [
            {
                "name": "ProductListComponent",
                "kind": "component",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "AboutComponent",
                "kind": "component",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "ContactComponent",
                "kind": "component",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "products",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "about",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "contact",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "cart",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "login",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "/products",
                "kind": "route-redirect",
                "filename": "src/app/app.routes.ts"
            }
        ]
    },
    "coverage": {
        "count": 10,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/application/list-products.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ListProductsUseCase",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/application/list-products.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ListProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-card/product-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 50,
                "coverageCount": "5/10",
                "status": "medium"
            },
            {
                "filePath": "src/app/core/auth/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TOKEN_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/auth.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authInterceptor",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/core/models/cart-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CartItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/product.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/cart.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CartService",
                "coveragePercent": 30,
                "coverageCount": "4/13",
                "status": "medium"
            },
            {
                "filePath": "src/app/infrastructure/product-repository.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductRepository",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/cart/cart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/checkout/checkout.ts",
                "type": "component",
                "linktype": "component",
                "name": "Checkout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/contact/contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product-list/product-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}