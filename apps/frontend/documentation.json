{
    "pipes": [],
    "interfaces": [
        {
            "name": "CartItem",
            "id": "interface-CartItem-4659524ec943a35e925af5c7f2237469ef207a8ee900aca76ba99abc081b9fe7b79ba5865e6a0b606582011dee86d07173b576c0af240403c3e5758bdf3f4d48",
            "file": "src/app/core/models/cart-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Product } from './product.model';\r\n\r\nexport interface CartItem {\r\n  product: Product;\r\n  quantity: number;\r\n}",
            "properties": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "Product",
            "id": "interface-Product-b1182fd38d719396d3f1abd0e3e00ba49b8fbf0bcb6c1bfa66a77b0c44f7d47ad7c74dce6a8b264829688ad380ea244c00d888808796faa92020c451fff35151",
            "file": "src/app/core/models/product.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Product {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  stock: number;\r\n  imageUrl?: string; // La hacemos opcional por si no siempre viene\r\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "stock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-23c11020a2831beb3fa02ee911a75b64009c31bb46f73a01145c2560cb13b7f7e641105b678bd8fb01a5a199117001f3da4a78351d29d85d213ed7b82982091f",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-49a5aa2bf0f1a05479a9c1d6ce98d196d29de0373b3e518dc9aeddeb1a26a164a0d2bb1ac63dded43a808086747f5e17fb0be40ba784be9d164015aba768095d-1",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  // Añade aquí cualquier otra propiedad que tu backend devuelva sobre el usuario\r\n  // por ejemplo: role: 'admin' | 'customer';\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-0f3c8635bae0084b73193bdf631e9f28bc1d9ddc78b61eccfd82054ac8bfb1c894d0454976055482e9c2fcfb11814d9cfc1eec66fff2fddabbc80ed0af4e7842",
            "file": "src/app/core/auth/auth.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'http://localhost:3000/api/auth'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<User | null>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userSubject",
                    "defaultValue": "new BehaviorSubject<User | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "checkTokenOnLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nVerifica si hay un token en localStorage al cargar la aplicación.\nSi el token existe y no ha expirado, actualiza el estado del usuario.\n",
                    "description": "<p>Verifica si hay un token en localStorage al cargar la aplicación.\nSi el token existe y no ha expirado, actualiza el estado del usuario.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nObtiene el token de localStorage.\nUsado principalmente por el AuthInterceptor.\n",
                    "description": "<p>Obtiene el token de localStorage.\nUsado principalmente por el AuthInterceptor.</p>\n",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "handleAuthentication",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProcesa el token después de un login exitoso.\n",
                    "description": "<p>Procesa el token después de un login exitoso.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2055,
                                "end": 2060,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "token"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2049,
                                "end": 2054,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>El token JWT.</p>\n"
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEnvía las credenciales al backend para iniciar sesión.\n",
                    "description": "<p>Envía las credenciales al backend para iniciar sesión.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 912,
                                "end": 923,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "credentials"
                            },
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 906,
                                "end": 911,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>Objeto con email y password.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 959,
                                "end": 966,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Un observable con la respuesta del backend (que debería incluir el token y datos del usuario).</p>\n"
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCierra la sesión del usuario.\n",
                    "description": "<p>Cierra la sesión del usuario.</p>\n"
                },
                {
                    "name": "saveToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGuarda el token en localStorage.\n",
                    "description": "<p>Guarda el token en localStorage.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2473,
                                "end": 2478,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "token"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2467,
                                "end": 2472,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>El token JWT recibido del backend.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { jwtDecode } from 'jwt-decode';\nimport { User } from '../models/user.model';\n\nconst TOKEN_KEY = 'auth-token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // La URL base de la API. Las rutas de usuario están en /api/users\n  // según la configuración del backend.\n  private apiUrl = 'http://localhost:3000/api/auth'; // Corregido: la ruta es /api/auth\n\n  private userSubject = new BehaviorSubject<User | null>(null);\n  public user$: Observable<User | null> = this.userSubject.asObservable();\n\n  constructor(private http: HttpClient) {\n    // Al iniciar el servicio, verificamos si hay un token válido en localStorage.\n    this.checkTokenOnLoad();\n  }\n\n  /**\n   * Envía las credenciales al backend para iniciar sesión.\n   * @param credentials Objeto con email y password.\n   * @returns Un observable con la respuesta del backend (que debería incluir el token y datos del usuario).\n   */\n  login(credentials: { email: string, password: string }): Observable<any> {\n    return this.http.post<{ token: string }>(`${this.apiUrl}/login`, credentials).pipe(      tap(response => {\n        // El 'tap' nos permite ejecutar una acción sin modificar la respuesta.\n        // Asumimos que el backend devuelve un objeto con una propiedad 'token' y 'user'.\n        if (response && response.token) {\n          // El backend solo devuelve el token, lo manejamos aquí\n          this.handleAuthentication(response.token);\n        }\n      })\n    );\n  }\n\n  /**\n   * Cierra la sesión del usuario.\n   */\n  logout(): void {\n    // Elimina el token del almacenamiento\n    localStorage.removeItem(TOKEN_KEY);\n    // Informa a toda la aplicación que ya no hay un usuario logueado\n    this.userSubject.next(null);\n    // Opcional: podrías querer redirigir al usuario a la página de inicio\n    // this.router.navigate(['/']);\n  }\n\n  /**\n   * Procesa el token después de un login exitoso.\n   * @param token El token JWT.\n   */\n  private handleAuthentication(token: string): void {\n    this.saveToken(token);\n    const decodedToken: any = jwtDecode(token);\n    // Reconstruimos el objeto User a partir del contenido del token\n    const user: User = { id: decodedToken.id, email: decodedToken.email, name: decodedToken.name };\n    this.userSubject.next(user);\n  }\n\n  /**\n   * Guarda el token en localStorage.\n   * @param token El token JWT recibido del backend.\n   */\n  private saveToken(token: string): void {\n    localStorage.setItem(TOKEN_KEY, token);\n  }\n\n  /**\n   * Obtiene el token de localStorage.\n   * Usado principalmente por el AuthInterceptor.\n   */\n  public getToken(): string | null {\n    return localStorage.getItem(TOKEN_KEY);\n  }\n\n  /**\n   * Verifica si hay un token en localStorage al cargar la aplicación.\n   * Si el token existe y no ha expirado, actualiza el estado del usuario.\n   */\n  private checkTokenOnLoad(): void {\n    const token = this.getToken();\n    if (token) {\n      try {\n        const decodedToken: any = jwtDecode(token);\n        const isExpired = decodedToken.exp * 1000 < Date.now();\n\n        if (isExpired) {\n          this.logout(); // Si el token ha expirado, limpiamos todo.\n        } else {\n          // Si el token es válido, reconstruimos el objeto de usuario y lo emitimos.\n          // El token solo contiene id, email y role. El 'name' no está presente.\n          // El token contiene id, name, email y role.\n          const user: User = { id: decodedToken.id, email: decodedToken.email, name: decodedToken.name };\n          this.userSubject.next(user);\n        }\n      } catch (error) {\n        this.logout(); // Si el token es inválido o malformado, limpiamos todo.\n      }\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "CartService",
            "id": "injectable-CartService-54e741e2889a2191204871ab98cb4dde2702f8cc4657d9773cd3584d78d5e14349081609d55e7468aac1bff7581e7c73ca311726387075e1decfc68e59d88319",
            "file": "src/app/core/state/cart.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'http://localhost:3000/api/cart'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "items$",
                    "defaultValue": "this.itemsSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CartItem[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "itemsSubject",
                    "defaultValue": "new BehaviorSubject<CartItem[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading$",
                    "defaultValue": "this.loadingSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loadingSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "totalItems$",
                    "defaultValue": "this.items$.pipe(\r\n    map(items => items.reduce((total, item) => total + item.quantity, 0))\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "totalPrice$",
                    "defaultValue": "this.items$.pipe(\r\n    map(items => items.reduce((total, item) => total + (item.product.price * item.quantity), 0))\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAñade un producto al carrito.\nSi el producto ya existe, incrementa su cantidad.\nSi no, lo añade como un nuevo ítem.\n",
                    "description": "<p>Añade un producto al carrito.\nSi el producto ya existe, incrementa su cantidad.\nSi no, lo añade como un nuevo ítem.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadInitialCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCarga el estado inicial del carrito desde el backend.\n",
                    "description": "<p>Carga el estado inicial del carrito desde el backend.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "removeProduct",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nElimina un producto del carrito por su ID.\n",
                    "description": "<p>Elimina un producto del carrito por su ID.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateQuantity",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "quantity",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActualiza la cantidad de un producto en el carrito.\nSi la cantidad es 0 o menos, elimina el producto.\n",
                    "description": "<p>Actualiza la cantidad de un producto en el carrito.\nSi la cantidad es 0 o menos, elimina el producto.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2961,
                                "end": 2970,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "productId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2955,
                                "end": 2960,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>El ID del producto a actualizar.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 3017,
                                "end": 3025,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "quantity"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 3011,
                                "end": 3016,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<p>La nueva cantidad.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, map, tap, finalize } from 'rxjs';\r\nimport { CartItem } from '../models/cart-item.model';\r\nimport { Product } from '../models/product.model';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = 'http://localhost:3000/api/cart';\r\n  private itemsSubject = new BehaviorSubject<CartItem[]>([]);\r\n  public items$: Observable<CartItem[]> = this.itemsSubject.asObservable();\r\n\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n  public loading$: Observable<boolean> = this.loadingSubject.asObservable();\r\n\r\n  public totalItems$: Observable<number> = this.items$.pipe(\r\n    map(items => items.reduce((total, item) => total + item.quantity, 0))\r\n  );\r\n\r\n  public totalPrice$: Observable<number> = this.items$.pipe(\r\n    map(items => items.reduce((total, item) => total + (item.product.price * item.quantity), 0))\r\n  );\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {\r\n    this.authService.user$.subscribe(user => {\r\n      if (user) {\r\n        this.loadInitialCart();\r\n      } else {\r\n        this.itemsSubject.next([]);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Carga el estado inicial del carrito desde el backend.\r\n   */\r\n  private loadInitialCart(): void {\r\n    this.loadingSubject.next(true);\r\n    this.http.get<CartItem[]>(`${this.apiUrl}`).pipe(\r\n      finalize(() => this.loadingSubject.next(false))\r\n    ).subscribe({\r\n      next: items => this.itemsSubject.next(items),\r\n      error: err => {\r\n        console.error('Error al cargar el carrito inicial:', err);\r\n        this.itemsSubject.next([]);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Añade un producto al carrito.\r\n   * Si el producto ya existe, incrementa su cantidad.\r\n   * Si no, lo añade como un nuevo ítem.\r\n   */\r\n  addProduct(product: Product): void {\r\n    const payload = { productId: product.id, quantity: 1 };\r\n    this.loadingSubject.next(true);\r\n    this.http.post<any>(`${this.apiUrl}/items`, payload).pipe(\r\n      finalize(() => this.loadingSubject.next(false))\r\n    ).subscribe({\r\n      next: () => this.loadInitialCart(),\r\n      error: err => {\r\n        console.error('Error al añadir producto al carrito:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Elimina un producto del carrito por su ID.\r\n   */\r\n  removeProduct(productId: string): void {\r\n    this.loadingSubject.next(true);\r\n    this.http.delete<any>(`${this.apiUrl}/items/${productId}`).pipe(\r\n      finalize(() => this.loadingSubject.next(false))\r\n    ).subscribe({\r\n      next: () => this.loadInitialCart(),\r\n      error: err => {\r\n        console.error('Error al eliminar producto del carrito:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Actualiza la cantidad de un producto en el carrito.\r\n   * Si la cantidad es 0 o menos, elimina el producto.\r\n   * @param productId El ID del producto a actualizar.\r\n   * @param quantity La nueva cantidad.\r\n   */\r\n  updateQuantity(productId: string, quantity: number): void {\r\n    const payload = { quantity };\r\n    this.loadingSubject.next(true);\r\n    this.http.patch<any>(`${this.apiUrl}/items/${productId}`, payload).pipe(\r\n      finalize(() => this.loadingSubject.next(false))\r\n    ).subscribe({\r\n      next: () => this.loadInitialCart(),\r\n      error: err => {\r\n        console.error('Error al actualizar la cantidad del producto:', err);\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ListProducts",
            "id": "injectable-ListProducts-6b7300c96da72a11ea858a7c4c47c06bede445e575d2c03354659e0b54e57248136393e5ca01e3a94e8917a8163923fc34a4db59e1ef19221ed92fbc5c170b7b",
            "file": "src/app/application/list-products.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListProducts {\r\n  \r\n}\r\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ListProductsUseCase",
            "id": "injectable-ListProductsUseCase-6c22b1be885d8b885eb8f8a3a6031a484bc1a0f026c7949de4ad430aac9cd68b0c048b7cc6560a3c0ff68ba3576d7392d77aaa7e3b5ef7928e23d0ef4ddca7a5",
            "file": "src/app/application/list-products.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "execute",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../core/models/product.model';\r\nimport { ProductRepository } from '../infrastructure/product-repository.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListProductsUseCase {\r\n  // Inyectamos el repositorio (la capa de infraestructura)\r\n  constructor(private productRepository: ProductRepository) { }\r\n\r\n  // El caso de uso simplemente expone un método \"execute\" que orquesta la lógica.\r\n  execute(): Observable<Product[]> {\r\n    return this.productRepository.getAllProducts();\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productRepository",
                        "type": "ProductRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "productRepository",
                        "type": "ProductRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ProductRepository",
            "id": "injectable-ProductRepository-39f3ffa12a03b71743014fc57f82602914d2532927aeb7782df143cbb8c44e17e3e1af3893f2e00059588b522a01df78c742c59b2239fcf6fac721879dee43c1",
            "file": "src/app/infrastructure/product-repository.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'http://localhost:3000/api/products'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAllProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, map } from 'rxjs';\r\nimport { Product } from '../core/models/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductRepository {\r\n  // La URL de tu API de backend\r\n  private apiUrl = 'http://localhost:3000/api/products';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllProducts(): Observable<Product[]> {\r\n    // Hacemos la llamada GET y esperamos un array de tipo Product\r\n    return this.http.get<Product[]>(this.apiUrl);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-ec9e487eaa5142811da38de632a1d8bf8c6a377816a059acd6a0d24e3415b9cc7d039bfe0a31fc1fbd5b5cb1dfabb26763f6a22a58898d3a7f40281ff70fc407",
            "file": "src/app/pages/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './about.component.html',\r\n  styleUrl: './about.component.scss'\r\n})\r\nexport class AboutComponent {\r\n\r\n}\r\n",
            "styleUrl": "./about.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"about-page\">\r\n  <div class=\"about-container\">\r\n    <header class=\"about-header\">\r\n      <h1>Sobre GamerStore</h1>\r\n      <p>Tu destino número uno para hardware y periféricos de gaming.</p>\r\n    </header>\r\n\r\n    <section class=\"about-content\">\r\n      <h2>Nuestra Misión</h2>\r\n      <p>\r\n        En GamerStore, nuestra misión es simple: equipar a cada gamer con las herramientas que necesita para alcanzar la victoria. Creemos que el equipo adecuado puede marcar la diferencia entre una partida buena y una legendaria. Por eso, seleccionamos cuidadosamente cada producto de nuestro catálogo, asegurándonos de ofrecer solo lo mejor en rendimiento, durabilidad y estilo.\r\n      </p>\r\n\r\n      <h2>Nuestra Historia</h2>\r\n      <p>\r\n        GamerStore nació de la pasión de un grupo de amigos gamers que estaban cansados de buscar en múltiples sitios para encontrar el equipo perfecto. Decidimos crear una tienda única donde la comunidad pudiera encontrar todo lo que necesita, desde teclados mecánicos y mouses de alta precisión hasta los monitores más rápidos y las sillas más cómodas.\r\n      </p>\r\n      <p>\r\n        Desde nuestros humildes comienzos en un pequeño garaje, hemos crecido hasta convertirnos en un referente en la comunidad gamer, siempre manteniendo nuestro compromiso con la calidad y el servicio al cliente.\r\n      </p>\r\n    </section>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "App",
            "id": "component-App-1e32ea619ef410decdd5d3c58b63c1bbf07cbc8aae7701d70106fa845ab0150f11f5b7e31cc131b824deb7666f578ab66f622c0f9232f9894895711a33543a35",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "signal('frontend')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { HeaderComponent } from './layout/header/header.component';\r\nimport { FooterComponent } from './layout/footer/footer.component';\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, HeaderComponent, FooterComponent],\r\n  templateUrl: './app.html',\r\n  styleUrl: './app.scss'\r\n})\r\nexport class App {\r\n  protected readonly title = signal('frontend');\r\n}\r\n",
            "styleUrl": "./app.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-header></app-header>\r\n\r\n<main>\r\n  <router-outlet />\r\n</main>\r\n\r\n<app-footer></app-footer>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-5747b2121bdc472b32e41e4e47db44dbd7601fe73e9c7b3d0f82e7d1aaf97be0d13d4880fee19b0e4d511178aa52a24a5a9ea3ee0034d204ffd659c0aae43e41",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 793,
                            "end": 807,
                            "kind": 328,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 794,
                                "end": 802,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: ` <button\r\n  type=\"button\"\r\n  (click)=\"onClick.emit($event)\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n>\r\n  {{ label }}\r\n</button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport class ButtonComponent {\r\n  /** Is this the principal call to action on the page? */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /** What background color to use */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /** How large should the button be? */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /** Optional click handler */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n.storybook-button--primary {\r\n  background-color: #555ab9;\r\n  color: white;\r\n}\r\n.storybook-button--secondary {\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n  background-color: transparent;\r\n  color: #333;\r\n}\r\n.storybook-button--small {\r\n  padding: 10px 16px;\r\n  font-size: 12px;\r\n}\r\n.storybook-button--medium {\r\n  padding: 11px 20px;\r\n  font-size: 14px;\r\n}\r\n.storybook-button--large {\r\n  padding: 12px 24px;\r\n  font-size: 16px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "CartComponent",
            "id": "component-CartComponent-3a77ea1989608a66424292ceae0368c9269eddd0ed7889e857d0bb0ea3e8993316ca07ef57f3fda8d23551c860f94d2bb8f70660820be961f0bdc0bad9702158",
            "file": "src/app/pages/cart/cart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cart",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cart.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cartItems$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CartItem[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isLoading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "totalPrice$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "onQuantityChange",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newQuantity",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newQuantity",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRemoveProduct",
                    "args": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "productId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "CurrencyPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CartService } from '../../core/state/cart.service';\r\nimport { Observable } from 'rxjs';\r\nimport { CartItem } from '../../core/models/cart-item.model';\r\nimport { AsyncPipe, CurrencyPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  standalone: true,\r\n  imports: [AsyncPipe, CurrencyPipe],\r\n  templateUrl: './cart.component.html',\r\n  styleUrl: './cart.component.scss'\r\n})\r\nexport class CartComponent {\r\n  cartItems$: Observable<CartItem[]>;\r\n  totalPrice$: Observable<number>;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  constructor(private cartService: CartService) {\r\n    this.cartItems$ = this.cartService.items$;\r\n    this.totalPrice$ = this.cartService.totalPrice$;\r\n    this.isLoading$ = this.cartService.loading$;\r\n  }\r\n\r\n  onRemoveProduct(productId: string): void {\r\n    this.cartService.removeProduct(productId);\r\n  }\r\n\r\n  onQuantityChange(productId: string, newQuantity: string): void {\r\n    const quantity = parseInt(newQuantity, 10);\r\n    // Nos aseguramos de que el valor sea un número válido antes de enviarlo\r\n    if (!isNaN(quantity)) {\r\n      this.cartService.updateQuantity(productId, quantity);\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./cart.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"cart-page\">\r\n  <div class=\"cart-container\">\r\n    <header class=\"cart-header\">\r\n      <h1>Carrito de Compras</h1>\r\n    </header>\r\n\r\n    <!-- Usamos el pipe async para obtener los items y los guardamos en la variable 'items' -->\r\n    @if (cartItems$ | async; as items) {\r\n\r\n      <!-- Mostramos el layout principal solo si hay items en el carrito -->\r\n      @if (items.length > 0) {\r\n        <!-- Añadimos una clase 'loading' cuando isLoading$ es true para poder aplicar estilos (ej. opacidad) -->\r\n        <div class=\"cart-layout\" [class.loading]=\"isLoading$ | async\">\r\n          <!-- Columna de la izquierda: Lista de productos -->\r\n          <div class=\"cart-items\">\r\n            <h2>Tus Productos</h2>\r\n\r\n            <!-- Iteramos sobre los productos reales del carrito -->\r\n            @for (item of items; track item.product.id) {\r\n              <div class=\"cart-item\">\r\n                <img [src]=\"item.product.imageUrl\" [alt]=\"item.product.name\" class=\"item-img\">\r\n                <div class=\"item-details\">\r\n                  <p class=\"item-name\">{{ item.product.name }}</p>\r\n                  <!-- Usamos el pipe currency para formatear el precio -->\r\n                  <p class=\"item-price\">{{ item.product.price | currency:'ARS' }}</p>\r\n                </div>\r\n                <div class=\"item-quantity\">\r\n                  <!-- Usamos una variable de referencia #quantityInput para acceder al valor de forma segura -->\r\n                  <input #quantityInput type=\"number\" [value]=\"item.quantity\" min=\"1\" (change)=\"onQuantityChange(item.product.id, quantityInput.value)\" [disabled]=\"isLoading$ | async\">\r\n                </div>\r\n                <button class=\"item-remove-btn\" (click)=\"onRemoveProduct(item.product.id)\" [disabled]=\"isLoading$ | async\">Eliminar</button>\r\n              </div>\r\n            }\r\n          </div>\r\n\r\n          <!-- Columna de la derecha: Resumen del pedido -->\r\n          <div class=\"order-summary\">\r\n            <h2>Resumen del Pedido</h2>\r\n            <!-- Mostramos el total dinámico con el pipe currency -->\r\n            <div class=\"summary-row total\"><p>Total:</p> <p>{{ (totalPrice$ | async) | currency:'ARS' }}</p></div>\r\n            <button class=\"checkout-btn\" [disabled]=\"isLoading$ | async\">Proceder al Pago</button>\r\n          </div>\r\n        </div>\r\n      } @else {\r\n        <!-- Mensaje que se muestra si el carrito está vacío -->\r\n        <div class=\"cart-empty\">\r\n          <h2>Tu carrito está vacío</h2>\r\n          <p>¡Añade productos para verlos aquí!</p>\r\n          <a routerLink=\"/products\" class=\"back-to-shop-btn\">Ver Productos</a>\r\n        </div>\r\n      }\r\n    }\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "Checkout",
            "id": "component-Checkout-1392663003ffd891118bc160a706723017c805573e10a5b127a944ca9cfca48d240159116e995ed96a2e9205bd5787135c17e641323262a56f4ab0256c566cf2",
            "file": "src/app/pages/checkout/checkout.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  imports: [],\r\n  templateUrl: './checkout.component.html',\r\n  styleUrl: './checkout.scss'\r\n})\r\nexport class Checkout {\r\n\r\n}\r\n",
            "styleUrl": "./checkout.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>checkout works!</p>\r\n"
        },
        {
            "name": "ContactComponent",
            "id": "component-ContactComponent-9928efadde7a7104f968cf9b3865a07c8bfcaa48603ebd598242e8fba17322a379e49e91b6b0564b71a10e104bcb17cf5ee0897b4e82e9a66e4a1f73aa20ee55",
            "file": "src/app/pages/contact/contact.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contact",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./contact.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './contact.component.html',\r\n  styleUrl: './contact.component.scss'\r\n})\r\nexport class ContactComponent {\r\n\r\n}\r\n",
            "styleUrl": "./contact.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"contact-page\">\r\n  <div class=\"contact-container\">\r\n    <header class=\"contact-header\">\r\n      <h1>Contáctanos</h1>\r\n      <p>¿Tienes alguna pregunta o comentario? Nos encantaría saber de ti.</p>\r\n    </header>\r\n\r\n    <div class=\"contact-content\">\r\n      <div class=\"contact-form-container\">\r\n        <h2>Envíanos un mensaje</h2>\r\n        <form class=\"contact-form\" (submit)=\"$event.preventDefault()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Nombre</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Correo Electrónico</label>\r\n            <input type=\"email\" id=\"email\" name=\"email\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"message\">Mensaje</label>\r\n            <textarea id=\"message\" name=\"message\" rows=\"6\" required></textarea>\r\n          </div>\r\n          <button type=\"submit\" class=\"submit-btn\">Enviar Mensaje</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"contact-info\">\r\n        <h2>Información de Contacto</h2>\r\n        <p><strong>Correo Electrónico:</strong><br>soporte@gamerstore.com</p>\r\n        <p><strong>Teléfono:</strong><br>+54 9 11 1234-5678</p>\r\n        <p><strong>Horario de Atención:</strong><br>Lunes a Viernes, 9:00 - 18:00</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-d1fc9ee76253d8ca897eb76f39c8d36825fb099bd45900fb5b754946eaecf1e204d4830f78928447625fca2275d94290846286d514e69415a8032f2d4003c60a",
            "file": "src/app/layout/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n@Component({\r\n  selector: 'app-footer',\r\n  standalone: true,\r\n  imports: [RouterModule],\r\n  templateUrl: './footer.component.html',\r\n  styleUrl: './footer.component.scss'\r\n})\r\nexport class FooterComponent {\r\n\r\n}\r\n",
            "styleUrl": "./footer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<footer class=\"footer\">\r\n  <div class=\"footer-container\">\r\n    <div class=\"footer-copyright\">\r\n      <p>&copy; 2024 GamerStore. Todos los derechos reservados.</p>\r\n    </div>\r\n    <div class=\"footer-links\">\r\n      <a routerLink=\"/privacy-policy\">Política de Privacidad</a>\r\n      <a routerLink=\"/terms-of-service\">Términos de Servicio</a>\r\n    </div>\r\n  </div>\r\n</footer>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-35575735b3444c6f049822f5234963ce3b046795ea9cdf6a15e8c7d72acd8ededb78ca25c4e1fbb5f0416c5855203a87ae0483f5d065c2dfa68d5329e347a84b",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ButtonComponent } from './button.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent],\r\n  template: `<header>\r\n  <div class=\"storybook-header\">\r\n    <div>\r\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <path\r\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n            fill=\"#FFF\"\r\n          />\r\n          <path\r\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n            fill=\"#555AB9\"\r\n          />\r\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\r\n        </g>\r\n      </svg>\r\n      <h1>Acme</h1>\r\n    </div>\r\n    <div>\r\n      <div *ngIf=\"user\">\r\n        <span class=\"welcome\">\r\n          Welcome, <b>{{ user.name }}</b\r\n          >!\r\n        </span>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n      </div>\r\n      <div *ngIf=\"!user\">\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          class=\"margin-left\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          [primary]=\"true\"\r\n          class=\"margin-left\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.storybook-header svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\n.storybook-header h1 {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  margin: 6px 0 6px 10px;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n}\r\n\r\n.storybook-header button + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.storybook-header .welcome {\r\n  margin-right: 10px;\r\n  color: #333;\r\n  font-size: 14px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-b9e03f26e805fa93a1ca64c8888a4188beb55f6e6a947daa08bfcb917c6b0af5063c1ce32ea75711ea0eca4368a77acb9272e7d13aca560cac8663f8c962e29a-1",
            "file": "src/app/layout/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "totalItemsInCart$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "user$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<User | null>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';import { CartService } from '../../core/state/cart.service';\r\nimport { Observable } from 'rxjs';\r\nimport { AsyncPipe } from '@angular/common';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from '../../core/auth/auth.service';\r\nimport { User } from '../../core/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './header.component.html',\r\n  styleUrl: './header.component.scss'\r\n})\r\nexport class HeaderComponent {\r\n  totalItemsInCart$: Observable<number>;\r\n  user$: Observable<User | null>;\r\n  constructor(\r\n    private cartService: CartService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.totalItemsInCart$ = this.cartService.totalItems$;\r\n    this.user$ = this.authService.user$;\r\n  }\r\n  logout(): void {\r\n    this.authService.logout();\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n",
            "styleUrl": "./header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header class=\"header\">\r\n  <div class=\"header-container\">\r\n    <div class=\"header-logo\">\r\n      <a routerLink=\"/\">\r\n        <!-- Un logo simple en SVG para no depender de un archivo de imagen -->\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M9 3L4.5 6L9 9M15 3L19.5 6L15 9\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M4.5 18L9 21L13.5 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M19.5 18L15 21L10.5 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M4.5 6V18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M19.5 6V18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n          <path d=\"M9 9L13.5 12L9 15\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n        </svg>\r\n        <span>GamerStore</span>\r\n      </a>\r\n    </div>\r\n    <nav class=\"header-nav\">\r\n      <a routerLink=\"/products\" routerLinkActive=\"active\">Productos</a>\r\n      <a routerLink=\"/about\" routerLinkActive=\"active\">Nosotros</a>\r\n      <a routerLink=\"/contact\" routerLinkActive=\"active\">Contacto</a>\r\n    </nav>\r\n    <div class=\"header-actions\">      \r\n      <!-- Usamos el pipe async para suscribirnos automáticamente al observable user$ -->\r\n      @if (user$ | async; as user) {\r\n        <!-- Contenido para usuarios logueados -->\r\n        <span class=\"user-greeting\">Hola, {{ user.name }}</span>\r\n        <a (click)=\"logout()\" class=\"nav-link logout-button\">Cerrar Sesión</a>\r\n      } @else {\r\n        <!-- Contenido para usuarios no logueados -->\r\n        <a routerLink=\"/login\" class=\"nav-link\">Iniciar Sesión</a>\r\n      }\r\n\r\n      <a routerLink=\"/cart\" class=\"cart-button\">\r\n        <span class=\"cart-icon\">🛒</span>\r\n        <!-- Usamos el pipe async para obtener el valor del observable -->\r\n        @if (totalItemsInCart$ | async; as total) {\r\n          @if (total > 0) { <span class=\"cart-count\">{{ total }}</span> }\r\n        }\r\n      </a>\r\n    </div>\r\n  </div>\r\n</header>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-1d7476129dff8cb1552d81771ce9440175e1fabb40d21d0e744ac2cf3a8298610621bfa56d26c5b0baad2ec471a423859b77e77c8bd0003117b6fca9cfae1d63",
            "file": "src/app/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/auth/auth.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule, // Necesario para directivas como ngIf\r\n    ReactiveFormsModule // El módulo para formularios reactivos\r\n  ],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  errorMessage: string | null = null;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = null;\r\n    this.authService.login(this.loginForm.value).subscribe({\r\n      next: () => this.router.navigate(['/products']),\r\n      error: () => this.errorMessage = 'Credenciales inválidas. Por favor, inténtalo de nuevo.',\r\n      complete: () => this.isLoading = false\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"login-container\">\r\n  <form class=\"login-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h2>Iniciar Sesión</h2>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input id=\"email\" type=\"email\" formControlName=\"email\" placeholder=\"tu@email.com\">\r\n      <!-- Mensajes de error para el campo email -->\r\n      @if (loginForm.get('email')?.invalid && (loginForm.get('email')?.dirty || loginForm.get('email')?.touched)) {\r\n        <div class=\"error-message\">\r\n          @if (loginForm.get('email')?.hasError) {\r\n            <p>El email es requerido.</p>\r\n          }\r\n          @if (loginForm.get('email')?.hasError) {\r\n            <p>Por favor, introduce un email válido.</p>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Contraseña</label>\r\n      <input id=\"password\" type=\"password\" formControlName=\"password\" placeholder=\"••••••••\">\r\n    </div>\r\n\r\n    @if (errorMessage) {\r\n      <div class=\"error-message server-error\">{{ errorMessage }}</div>\r\n    }\r\n\r\n    <button type=\"submit\" [disabled]=\"loginForm.invalid || isLoading\">\r\n      {{ isLoading ? 'Cargando...' : 'Iniciar Sesión' }}\r\n    </button>\r\n  </form>\r\n</div>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-79bfb042a722f49579739dfd01d8f1b67681d0272a72a283c14edeb22f0462775c80ba4f7c1eb0fa4bd5fa1844083da0140980e75b5500cd98cc26421ec6d569",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HeaderComponent } from './header.component';\r\nimport type { User } from './user';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  standalone: true,\r\n  imports: [CommonModule, HeaderComponent],\r\n  template: `<article>\r\n  <storybook-header\r\n    [user]=\"user\"\r\n    (onLogout)=\"doLogout()\"\r\n    (onLogin)=\"doLogin()\"\r\n    (onCreateAccount)=\"doCreateAccount()\"\r\n  ></storybook-header>\r\n  <section class=\"storybook-page\">\r\n    <h2>Pages in Storybook</h2>\r\n    <p>\r\n      We recommend building UIs with a\r\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <strong>component-driven</strong>\r\n      </a>\r\n      process starting with atomic components and ending with pages.\r\n    </p>\r\n    <p>\r\n      Render pages with mock data. This makes it easy to build and review page states without\r\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n      in Storybook:\r\n    </p>\r\n    <ul>\r\n      <li>\r\n        Use a higher-level connected component. Storybook helps you compose such data from the\r\n        \"args\" of child component stories\r\n      </li>\r\n      <li>\r\n        Assemble data in the page component from your services. You can mock these services out\r\n        using Storybook.\r\n      </li>\r\n    </ul>\r\n    <p>\r\n      Get a guided tutorial on component-driven development at\r\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        Storybook tutorials\r\n      </a>\r\n      . Read more in the\r\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n      .\r\n    </p>\r\n    <div class=\"tip-wrapper\">\r\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <path\r\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n            id=\"a\"\r\n            fill=\"#999\"\r\n          />\r\n        </g>\r\n      </svg>\r\n      Viewports addon in the toolbar\r\n    </div>\r\n  </section>\r\n</article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\r\n  margin: 0 auto;\r\n  padding: 48px 20px;\r\n  max-width: 600px;\r\n  color: #333;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.storybook-page h2 {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  margin: 0 0 4px;\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n}\r\n\r\n.storybook-page p {\r\n  margin: 1em 0;\r\n}\r\n\r\n.storybook-page a {\r\n  color: inherit;\r\n}\r\n\r\n.storybook-page ul {\r\n  margin: 1em 0;\r\n  padding-left: 30px;\r\n}\r\n\r\n.storybook-page li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.storybook-page .tip {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  margin-right: 10px;\r\n  border-radius: 1em;\r\n  background: #e7fdd8;\r\n  padding: 4px 12px;\r\n  color: #357a14;\r\n  font-weight: 700;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n}\r\n\r\n.storybook-page .tip-wrapper {\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n  margin-right: 4px;\r\n  width: 12px;\r\n  height: 12px;\r\n}\r\n\r\n.storybook-page .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ProductCardComponent",
            "id": "component-ProductCardComponent-02456727e4500cde5587a8a3881607b486652f50b69c24b3d69da1c05479194406eba1ea76473baf29e10e0f7ca3155d07cfe12eee99bf7039cfe33138614a27",
            "file": "src/app/components/product-card/product-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-card",
            "styleUrls": [
                "./product-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Product",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onAddToCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CurrencyPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { Product } from '../../core/models/product.model';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { CartService } from '../../core/state/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-product-card',\r\n  standalone: true,\r\n  imports: [CurrencyPipe],\r\n  templateUrl: './product-card.component.html',\r\n  styleUrls: ['./product-card.component.scss']\r\n})\r\nexport class ProductCardComponent {\r\n  @Input() product!: Product;\r\n  constructor(private cartService: CartService) {}\r\n\r\n  onAddToCart(): void {\r\n    this.cartService.addProduct(this.product);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n  width: 300px;\r\n  font-family: sans-serif;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n\r\n  &.out-of-stock {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n.card-img {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.card-body {\r\n  padding: 16px;\r\n}\r\n\r\n.card-title {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin: 0 0 8px;\r\n  // Trunca el texto si es muy largo\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.card-price {\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin: 0 0 16px;\r\n}\r\n\r\n.card-button {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover:not(:disabled) {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #c0c0c0;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n",
                    "styleUrl": "./product-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"card\" [class.out-of-stock]=\"product.stock === 0\">\r\n  <img [src]=\"product.imageUrl\" [alt]=\"product.name\" class=\"card-img\">\r\n  <div class=\"card-body\">\r\n    <h3 class=\"card-title\">{{ product.name }}</h3>\r\n    <p class=\"card-price\">{{ product.price | currency:'ARS' }}</p>\r\n    <button class=\"card-button\" [disabled]=\"product.stock === 0\" (click)=\"onAddToCart()\">\r\n      {{ product.stock > 0 ? 'Agregar al Carrito' : 'Sin Stock' }}\r\n    </button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ProductListComponent",
            "id": "component-ProductListComponent-581ff6b479cc6c9b23a0769fddb2859df879d71430b72644301bb0e57403534be926b4d07d23e10faea9618807f29c4c6129e3ab791e6f36662b3dd66d3b3635",
            "file": "src/app/pages/product-list/product-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-list",
            "styleUrls": [
                "./product-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "products$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Product[]>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ProductCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../../core/models/product.model';\r\nimport { ListProductsUseCase } from '../../application/list-products.service';\r\nimport { ProductCardComponent } from '../../components/product-card/product-card.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  standalone: true,\r\n  imports: [CommonModule, ProductCardComponent],\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.scss'],})\r\nexport class ProductListComponent implements OnInit {\r\n  // Guardamos el observable que nos devuelve el caso de uso\r\n  products$!: Observable<Product[]>;\r\n\r\n  // Inyectamos nuestro caso de uso\r\n  constructor(private listProducts: ListProductsUseCase) {}\r\n\r\n  ngOnInit(): void {\r\n    this.products$ = this.listProducts.execute();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 24px;\r\n  padding: 24px;\r\n}\r\n",
                    "styleUrl": "./product-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "listProducts",
                        "type": "ListProductsUseCase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "listProducts",
                        "type": "ListProductsUseCase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"product-list-container\">\r\n  <div class=\"product-grid\">\r\n      @for (product of products$ | async; track product.id) {\r\n        <app-product-card [product]=\"product\"></app-product-card>\r\n      }\r\n      </div>\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideHttpClient(withInterceptors([authInterceptor])),\r\n  ]\r\n}"
            },
            {
                "name": "authInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/interceptors/auth.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\r\n  // 1. Inyectamos el AuthService para acceder a la lógica del token.\r\n  const authService = inject(AuthService);\r\n  const token = authService.getToken();\r\n\r\n  // 2. Si no hay token, dejamos pasar la petición original sin modificarla.\r\n  // Esto es crucial para peticiones públicas como el login o el registro.\r\n  if (!token) {\r\n    return next(req);\r\n  }\r\n\r\n  // 3. Si hay un token, clonamos la petición y le añadimos la cabecera de autorización.\r\n  // Las peticiones en Angular son inmutables, por eso debemos clonarlas.\r\n  const authReq = req.clone({\r\n    setHeaders: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n\r\n  // 4. Dejamos pasar la nueva petición con la cabecera ya incluida.\r\n  return next(authReq);\r\n}",
                "rawdescription": "Interceptor funcional que se encarga de añadir el token de autenticación\r\na las cabeceras de las peticiones HTTP salientes.",
                "description": "<p>Interceptor funcional que se encarga de añadir el token de autenticación\na las cabeceras de las peticiones HTTP salientes.</p>\n"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Routes",
                "defaultValue": "[\r\n  { path: 'products', component: ProductListComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'contact', component: ContactComponent },\r\n  {\r\n    path: 'cart',\r\n    loadComponent: () => \"import('./pages/cart/cart.component').then(m => m.CartComponent)\"\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadComponent: () => \"import('./pages/login/login.component').then(m => m.LoginComponent)\"\r\n  },\r\n  { path: '', redirectTo: '/products', pathMatch: 'full' }\r\n]"
            },
            {
                "name": "TOKEN_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/auth/auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'auth-token'"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideHttpClient(withInterceptors([authInterceptor])),\r\n  ]\r\n}"
                }
            ],
            "src/app/core/interceptors/auth.interceptor.ts": [
                {
                    "name": "authInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/interceptors/auth.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\r\n  // 1. Inyectamos el AuthService para acceder a la lógica del token.\r\n  const authService = inject(AuthService);\r\n  const token = authService.getToken();\r\n\r\n  // 2. Si no hay token, dejamos pasar la petición original sin modificarla.\r\n  // Esto es crucial para peticiones públicas como el login o el registro.\r\n  if (!token) {\r\n    return next(req);\r\n  }\r\n\r\n  // 3. Si hay un token, clonamos la petición y le añadimos la cabecera de autorización.\r\n  // Las peticiones en Angular son inmutables, por eso debemos clonarlas.\r\n  const authReq = req.clone({\r\n    setHeaders: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n\r\n  // 4. Dejamos pasar la nueva petición con la cabecera ya incluida.\r\n  return next(authReq);\r\n}",
                    "rawdescription": "Interceptor funcional que se encarga de añadir el token de autenticación\r\na las cabeceras de las peticiones HTTP salientes.",
                    "description": "<p>Interceptor funcional que se encarga de añadir el token de autenticación\na las cabeceras de las peticiones HTTP salientes.</p>\n"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Routes",
                    "defaultValue": "[\r\n  { path: 'products', component: ProductListComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'contact', component: ContactComponent },\r\n  {\r\n    path: 'cart',\r\n    loadComponent: () => \"import('./pages/cart/cart.component').then(m => m.CartComponent)\"\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadComponent: () => \"import('./pages/login/login.component').then(m => m.LoginComponent)\"\r\n  },\r\n  { path: '', redirectTo: '/products', pathMatch: 'full' }\r\n]"
                }
            ],
            "src/app/core/auth/auth.service.ts": [
                {
                    "name": "TOKEN_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/auth/auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'auth-token'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "children": [
            {
                "name": "ProductListComponent",
                "kind": "component",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "AboutComponent",
                "kind": "component",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "ContactComponent",
                "kind": "component",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "products",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "about",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "contact",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "cart",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "login",
                "kind": "route-path",
                "filename": "src/app/app.routes.ts"
            },
            {
                "name": "/products",
                "kind": "route-redirect",
                "filename": "src/app/app.routes.ts"
            }
        ]
    },
    "coverage": {
        "count": 10,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/application/list-products.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ListProductsUseCase",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/application/list-products.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ListProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product-card/product-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 54,
                "coverageCount": "6/11",
                "status": "good"
            },
            {
                "filePath": "src/app/core/auth/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TOKEN_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/auth.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authInterceptor",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/core/models/cart-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CartItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/product.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/cart.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CartService",
                "coveragePercent": 30,
                "coverageCount": "4/13",
                "status": "medium"
            },
            {
                "filePath": "src/app/infrastructure/product-repository.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductRepository",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/cart/cart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/checkout/checkout.ts",
                "type": "component",
                "linktype": "component",
                "name": "Checkout",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/contact/contact.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/product-list/product-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}